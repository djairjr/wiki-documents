"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[69685],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),v=i,m=u["".concat(s,".").concat(v)]||u[v]||d[v]||o;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},56880:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),i=(r(67294),r(3905));const o={description:"Development_Tutorial_of_Wio-Tracker 1110",title:"Development Tutorial",keywords:["Tracker","Wio"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/development_tutorial_for_Wio-trakcer",last_update:{date:"9/4/2023",author:"Jessie"}},a=void 0,l={unversionedId:"Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/Development_Tutorial/Development_Tutorial",id:"Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/Development_Tutorial/Development_Tutorial",title:"Development Tutorial",description:"Development_Tutorial_of_Wio-Tracker 1110",source:"@site/docs/Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/Development_Tutorial/Development_Tutorial.md",sourceDirName:"Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/Development_Tutorial",slug:"/development_tutorial_for_Wio-trakcer",permalink:"/development_tutorial_for_Wio-trakcer",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/Development_Tutorial/Development_Tutorial.md",tags:[],version:"current",lastUpdatedBy:"Jessie",lastUpdatedAt:1693785600,formattedLastUpdatedAt:"Sep 4, 2023",frontMatter:{description:"Development_Tutorial_of_Wio-Tracker 1110",title:"Development Tutorial",keywords:["Tracker","Wio"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/development_tutorial_for_Wio-trakcer",last_update:{date:"9/4/2023",author:"Jessie"}}},s={},p=[{value:"Hardware overview",id:"hardware-overview",level:2},{value:"Firmware overview",id:"firmware-overview",level:2},{value:"Grove",id:"grove",level:2},{value:"Grove I2C",id:"grove-i2c",level:3},{value:"Grove UART",id:"grove-uart",level:3},{value:"Grove Digital",id:"grove-digital",level:3},{value:"Grove Analog",id:"grove-analog",level:3},{value:"LoRaWAN",id:"lorawan",level:3},{value:"Resource",id:"resource",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Before start the development, please check ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/setup_toolchain_for_wio_tracker/"},"Setup your toolchain")," to set up the tool first."),(0,i.kt)("h2",{id:"hardware-overview"},"Hardware overview"),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/wio_tracker/hard-overview.png",alt:"pir",width:800,height:"auto"})),(0,i.kt)("h2",{id:"firmware-overview"},"Firmware overview"),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://github.com/Seeed-Studio/Wio_Tracker_1110_Examples/raw/b2ebc5f1de0af24a9f72316418f9313de4264e0f/media/1.png\n",alt:"pir",width:600,height:"auto"})),(0,i.kt)("h2",{id:"grove"},"Grove"),(0,i.kt)("p",null,"There are 6 Grove interfaces in the Wio Tracker 1110 Dev Board, which can be connected to 300+ Grove modules. Click ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Grove_Sensor_Intro/"},"here")," to know more about the Grove module."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/wio_tracker/wio-tracker-grove.png",alt:"pir",width:800,height:"auto"})),(0,i.kt)("h3",{id:"grove-i2c"},"Grove I2C"),(0,i.kt)("p",null,"There is a Grove I2C port on the DK, with ",(0,i.kt)("inlineCode",{parentName:"p"},"SDA")," on pin 27 and ",(0,i.kt)("inlineCode",{parentName:"p"},"SCL")," on pin 26. "),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Wio-WM1110%20Dev%20Kit/Grove_iic.png",alt:"pir",width:300,height:"auto"})),(0,i.kt)("h3",{id:"grove-uart"},"Grove UART"),(0,i.kt)("p",null,"The Wio Tracker 1110 Dev Board has two UART peripherals, namely ",(0,i.kt)("inlineCode",{parentName:"p"},"uart0")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"uart1"),".  ",(0,i.kt)("inlineCode",{parentName:"p"},"uart0")," pins are connected to the CH340C for debugging purposes, while ",(0,i.kt)("inlineCode",{parentName:"p"},"uart1")," serves as a Grove UART Port."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Wio-WM1110%20Dev%20Kit/Grove_uart.png",alt:"pir",width:300,height:"auto"})),(0,i.kt)("p",null,"Referring to the schematic, TXD is located on pin 8 and RXD is on pin 6. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#define     LED1                      13\n#define     LED2                      14\n#define     TXD                       8\n#define     RXD                       6\n#define     UART_TX_RX_BUF_SIZE       256\n")),(0,i.kt)("h3",{id:"grove-digital"},"Grove Digital"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <Adafruit_TinyUSB.h>  \n#include <Wire.h>              \n#include <Ultrasonic.h>        \n\n// Define the pin to which the ultrasonic sensor is connected\nconstexpr int ULTRASONIC_PIN = D0;  \n\nUltrasonic ultrasonic(ULTRASONIC_PIN);  \n\nvoid setup()\n{\n  delay(100);                 \n  Serial.begin(115200);        // Start Serial communication at a baud rate of 115200\n  while (!Serial) delay(100); \n\nvoid loop()\n{\n  long RangeInInches;         // Variable to store distance in inches\n  long RangeInCentimeters;    // Variable to store distance in centimeters\n\n  Serial.println("The distance to obstacles in front is: ");  \n\n  RangeInInches = ultrasonic.MeasureInInches();  // Measure distance in inches using the Ultrasonic sensor\n  Serial.print(RangeInInches);  \n  Serial.println(" inch");       \n\n  delay(250); \n\n  RangeInCentimeters = ultrasonic.MeasureInCentimeters();  \n  Serial.print(RangeInCentimeters);  \n  Serial.println(" cm");             \n\n  delay(2500);  \n}\n')),(0,i.kt)("h3",{id:"grove-analog"},"Grove Analog"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Example Code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <Adafruit_TinyUSB.h> // for Serial\n\nconstexpr int ADCIN = A0;\nconstexpr float MV_PER_LSB = 3600.0f / 1024.0f; // 10-bit ADC with 3.6V input range\n\nvoid setup()\n{\n  delay(100);\n  Serial.begin(115200);\n  while (!Serial) delay(100);\n}\n\nvoid loop()\n{\n    // Get a fresh ADC value\n  long sum = 0;\n  for (int i = 0; i < 32; i++)\n  {\n    sum += analogRead(ADCIN);\n  }\n  int adcvalue = sum / 32;\n\n  // Display the results\n  Serial.print(adcvalue);\n  Serial.print(" [");\n  Serial.print((float)adcvalue * MV_PER_LSB);\n  Serial.println(" mV]");\n\n  delay(1000);\n}\n'))),(0,i.kt)("h3",{id:"lorawan"},"LoRaWAN"),(0,i.kt)("h2",{id:"resource"},"Resource"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"[Github]")," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Wio_Tracker_1110_Examples"},"Seeed-Studio/Wio_Tracker_1110_Dev_Board")))}d.isMDXComponent=!0}}]);