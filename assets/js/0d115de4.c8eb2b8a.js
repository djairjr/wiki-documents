"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[51532],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),g=a,f=p["".concat(l,".").concat(g)]||p[g]||d[g]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},77897:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={description:"SenseCAP_T1000_tracker_and_InfluxDB_Integrated",title:"InfluxDB Integrated",keywords:["SenseCAP_T1000_tracker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/SenseCAP_T1000_tracker_InfluxDB",last_update:{date:"8/16/2023",author:"Jessie"}},o=void 0,s={unversionedId:"Sensor/SenseCAP/SenseCAP_T1000_Tracker/TTN_Cloud_Services/InfluxDB_Integrated",id:"Sensor/SenseCAP/SenseCAP_T1000_Tracker/TTN_Cloud_Services/InfluxDB_Integrated",title:"InfluxDB Integrated",description:"SenseCAP_T1000_tracker_and_InfluxDB_Integrated",source:"@site/docs/Sensor/SenseCAP/SenseCAP_T1000_Tracker/TTN_Cloud_Services/InfluxDB_Integrated.md",sourceDirName:"Sensor/SenseCAP/SenseCAP_T1000_Tracker/TTN_Cloud_Services",slug:"/SenseCAP_T1000_tracker_InfluxDB",permalink:"/SenseCAP_T1000_tracker_InfluxDB",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SenseCAP/SenseCAP_T1000_Tracker/TTN_Cloud_Services/InfluxDB_Integrated.md",tags:[],version:"current",lastUpdatedBy:"Jessie",lastUpdatedAt:1692144e3,formattedLastUpdatedAt:"Aug 16, 2023",frontMatter:{description:"SenseCAP_T1000_tracker_and_InfluxDB_Integrated",title:"InfluxDB Integrated",keywords:["SenseCAP_T1000_tracker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/SenseCAP_T1000_tracker_InfluxDB",last_update:{date:"8/16/2023",author:"Jessie"}}},l={},c=[{value:"Preparation",id:"preparation",level:3},{value:"Setup InfluxDB Cloud",id:"setup-influxdb-cloud",level:3},{value:"Create Bucket",id:"create-bucket",level:4},{value:"Generate Tokens",id:"generate-tokens",level:4},{value:"Configure the Telegraf",id:"configure-the-telegraf",level:3},{value:"Monitor Your Data",id:"monitor-your-data",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.influxdata.com/influxdb/v2.0/get-started/"},"InfluxDB")," is an open source time series database, focusing on high-performance reading, high-performance writing, efficient storage and real-time analysis of massive time series data. In addition to native protocols such as HTTP and UDP, it is also compatible with communication protocols of components such as CollectD, Graphite, OpenTSDB, and Prometheus. Widely used in DevOps monitoring, IoT monitoring, real-time analysis and other scenarios."),(0,a.kt)("p",null,"Before starting the setup, please check ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/SenseCAP_T1000_tracker_TTN"},"Connect SenseCAP T1000 to TTS")," to connect your SenseCAP T1000 Tracker to TTS first."),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/buckets.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("p",null,"The content of this chapter will guide users how to connect the SenseCAP ",(0,a.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/sensecap-t1000-tracker?utm_source=emailsig&utm_medium=emailsig&utm_campaign=emailsig"},"T1000 Tracker")," to InfluxDB through TTN."),(0,a.kt)("h3",{id:"preparation"},"Preparation"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Install Telegraf")),(0,a.kt)("p",null,"Before ste up the InfluxDB, we need to in install the Telegraf agent (version 1.9.2 or higher) ."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://docs.influxdata.com/influxdb/v2.0/telegraf-configs/"},"Telegraf Configuration")),(0,a.kt)("h3",{id:"setup-influxdb-cloud"},"Setup InfluxDB Cloud"),(0,a.kt)("p",null,"Log in to your ",(0,a.kt)("a",{parentName:"p",href:"https://us-east-1-1.aws.cloud2.influxdata.com/"},"InfluxDB Cloud"),"."),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/buckets.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("h4",{id:"create-bucket"},"Create Bucket"),(0,a.kt)("p",null,'On the "Buckets" tab.'),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/buckets.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("p",null,'Click the "Create Bucket" button to create a new bucket.'),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/createbucket.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("p",null,'Name your bucket, choose how long the data will remain in the database and then click "Create".'),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/create_done.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("h4",{id:"generate-tokens"},"Generate Tokens"),(0,a.kt)("p",null,'Navigate to "API TOKENS" tab and click the "GENERATE API TOKEN" button to create a token.'),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/get_token.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/create_done.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("h3",{id:"configure-the-telegraf"},"Configure the Telegraf"),(0,a.kt)("p",null,'Navigate to "TELEGRAF" tab and click "CREATE CONFIGURATION"'),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/telegraf.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/create_telegraf.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/download_config.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("p",null,"Once you have downloaded the Telegraf configuration file as described in InfluxDB Cloud 2.0 Setup, update it by adding the following lines and modifying them according to your MQTT server info:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'[[inputs.mqtt_consumer]]\n#\n#MQTT broker URLs to be used. The format is scheme://host:port, schema can be tcp, ssl, or ws.\n  servers = ["tcp://localhost:1883"]\n#\n#Topics to subscribe to\n  topics = ["#"]\n#\n#Username and password\n  username = "example"\n  password = "NNSXS.JNSBLIV34VXYXS7D4ZWV2IKPTGJM3DFRGO.........."\n#\n#Needed only if your payload type is string, since Telegraf does not forward data of this type by default\n  json_string_fields = ["uplink_message_frm_payload"]\n#\n#Define the message format\n  data_format = "json"\n')),(0,a.kt)("p",null,"Next, you need to copy the previously generated token from the Tokens tab and export it to an environmental variable to be used by the InfluxDB output plugin, or you can simply pass it directly as a token value in the configuration file. You can set the environmental variable by using the following command in your terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'INFLUX_TOKEN="paste your token here"\n')),(0,a.kt)("p",null,"Run the Telegraf agent in your terminal with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"telegraf --config /path/to/custom/telegraf.conf\n")),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/connected_MQTT.png",alt:"pir",width:800,height:"auto"})),(0,a.kt)("h3",{id:"monitor-your-data"},"Monitor Your Data"))}p.isMDXComponent=!0}}]);